#!/usr/bin/env python3

import importlib.util
import sys
import ipaddress
import yaml

if len(sys.argv) != 3 :
    print('error',file=sys.stderr)
    sys.exit(1)

sys.path.append('/usr/share/netplan')
from netplan import configmanager 
netplan_config_manager = configmanager.ConfigManager()
netplan_config_manager.parse()
netplan_state = netplan_config_manager.np_state
with open('/dev/shm/netplan-query','w+') as fd:
    netplan_state.dump_yaml(fd)
    fd.seek(0)
    netplan_config = yaml.safe_load(fd)['network']

interface = sys.argv[1]
needle = sys.argv[2]

try:
    netpla_config['ethernets'][interface]['addresses']
except :
    print('error',file=sys.stderr)
    sys.exit(1)


raw_ip = None
if needle.startswith('replication_'):
    for ip in netplan_config['ethernets'][interface]['addresses']:
        if ip.startswith('10.3'):
            raw_ip = ip
            break
        else:
            continue
else:
    for ip in netplan_config['ethernets'][interface]['addresses']:
        if not ip.startswith('10.3'):
            raw_ip = ip
            break
        else:
            continue
if not raw_ip:
    print('error 2',file=sys.stderr)
    sys.exit(1)

object_interface = ipaddress.IPv4Interface(raw_ip)

needle = needle.replace('replication_','')

if needle.lower() == 'ip':
    print(object_interface.ip.compressed)
    sys.exit()
elif needle.lower() == 'network':
    print(object_interface.network.compressed)
    sys.exit()

